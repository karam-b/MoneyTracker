@mixin will-change($properties...){
  $val: nth($list: $properties, $n: 1);
  @for $i from 1 to length($properties) {
    $val: $val + ', ' + nth($list: $properties, $n: $i + 1);
  }
  will-change: $val;
} 



.root{
  display: flex;
  position: relative;
  align-items: flex-end;
  flex-direction: column;
}





@mixin elem($phase, $second:false) {
  @if($second) {
    .elem:global(-#{$phase}), .elem:global(-#{$second}) {
      @content;
    }
  }
  @else{
    .elem:global(-#{$phase}) {
      @content;
    }
  }
}

@include elem(enter, appear) {
  height: 0px;
    opacity: 0;
}

@include elem(enter-active, appear-active) {
  transition: height 0.15s ease-in-out, opacity 0.25s ease-in-out;
  height: var(--h);
  opacity: 1;
}

@include elem(enter-done, appear-done) {
  height: auto;
}

@mixin fade($phase) {
  .elem:global(-#{$phase}) .fade {
    @content;
  }
}

@include fade(exit) {
  bottom: var(--r1);
  right: var(--r2);  
}
@include fade(exit-active) {
  position: absolute;
  right: calc(var(--r2) - 30px);
  transition: right 0.25s ease-in-out;
}  
@include fade(exit-done) {
  display: none;

}

@include elem(exit) {
  height: var(--h);
  min-width: var(--w);
  opacity: 1;
}
@include elem(exit-active) {
  transition: height 0.25s ease-in-out, opacity 0.15s ease-in-out;
  min-width: var(--w);
  height: 0px;
  opacity: 0;
}

@include elem(exit-done) {
  height: 0;
  display: none;
  opacity: 0;
}

