/// <reference types="node" />
import { compile, compileFromFile } from 'json-schema-to-typescript'
import * as httpErrors from '../src/httpErrors'
import * as schema from '../src/schema'
import * as api from '../src/api'
import * as routes from '../src/routes'
import { writeFileSync } from 'fs'
import { JSONSchema7 } from 'json-schema'

async function main(obj: object, src: string) {
  const schemas = Object.entries(obj).map(([name, schema]) => {
    return compile(
      {
        ...schema,
        $id: schema.$id.replace('https://example.com/', '').replace(/\//g, '_'),
      },
      name,
      {
        bannerComment: '',
      },
    ) as Promise<string>
  })

  const file = await Promise.all(schemas).then(ts => {
    return `
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify \`json-schema/${src}.ts\`,
 * and run json-schema-to-typescript to regenerate this file.
 */
${ts.join('\n\n')}
`
  })

  writeFileSync(`./dist/${src}.ts`, file, 'utf-8')
}

main(httpErrors, 'httpErrors')
main(schema, 'schema')
main(api, 'api')
main(routes, 'routes')
