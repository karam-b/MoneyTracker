{"version":3,"file":"categories.stories-c7992a35.js","sources":["../../src/components/forms/EditCategory.tsx","../../src/components/CategoryEntry.tsx","../../src/components/forms/AddCategory.tsx","../../src/routes/categories.tsx"],"sourcesContent":["import 'twin.macro'\nimport React from 'react'\n// import { OutputOfAction } from '@src/lib/react-query'\nimport { create_category, update_category } from '@src/api'\nimport Form from '../facade/Form'\n\nimport TextField, { HiddenField } from 'ui/src/components/forms/TextField'\nimport SubmitButton from 'ui/src/components/forms/SubmitButton'\nimport Status from 'ui/src/components/forms/Status'\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\nimport { apis } from '@src/api/type'\n\nexport default function EditCategory({\n  category,\n}: {\n  // category: OutputOfAction<typeof update_category>\n  category: Awaited<ReturnType<typeof update_category>>\n}) {\n  // const mutate = useUpdateCategory()\n  const client = useQueryClient()\n\n  const mutate = useMutation({\n    mutationFn: update_category,\n    onSettled: () => {\n      client.invalidateQueries(['find_category'] satisfies apis)\n    },\n  })\n\n  return (\n    <Form\n      onSuccess={(values, ctx) => {\n        ctx.setValues(category, false)\n        ctx.setStatus({ success: 'updated' })\n      }}\n      initial={category}\n      action={mutate}\n    >\n      <div tw=\"grid grid-cols-2 gap-3\">\n        <Status tw=\"col-span-2\" />\n        <HiddenField name=\"_id\" />\n        <TextField name=\"title\" />\n        <TextField name=\"color\" />\n        <TextField name=\"note\" />\n        <TextField name=\"icon\" />\n        <SubmitButton tw=\"col-span-2 mt-2\" size=\"lg\">\n          submit\n        </SubmitButton>\n      </div>{' '}\n    </Form>\n  )\n}\n","import React from 'react'\nimport { delete_category, find_one_category } from '@src/api'\nimport { useOneState } from '@src/utils/OneOpenAtATime'\nimport { useState } from 'react'\nimport tw from 'twin.macro'\nimport EditCategory from './forms/EditCategory'\nimport { useQuery } from '@src/lib/react-query'\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\nimport { apis } from '@src/api/type'\n\nexport default function CategoryEntry({\n  category,\n}: {\n  category: Awaited<ReturnType<typeof find_one_category>>\n}) {\n  const [expand, setExpand] = useOneState()\n  const [edit, setEdit] = useState(false)\n\n  const freshData = useQuery('find_one_category', [{ _id: category._id }])\n\n  const data = freshData.status === 'success' ? freshData.data : category\n\n  const client = useQueryClient()\n  const delete_ = useMutation({\n    mutationFn: delete_category,\n    onSettled: () => {\n      client.invalidateQueries([\n        'find_one_category',\n        { _id: category._id },\n      ] satisfies apis)\n      client.invalidateQueries(['find_category'] satisfies apis)\n    },\n  })\n\n  return (\n    <div tw=\"hover:bg-slate-200/50 dark:hover:bg-slate-600/10 rounded-md p-3 py-1\">\n      <div tw=\"text-indigo-600\">\n        {delete_.status === 'loading' && 'deleting'}\n        {delete_.status === 'success' && 'deleted'}\n      </div>\n      <div>{data.title}</div>\n      <div>{data.icon || 'no icon'}</div>\n      <div>{data.color || 'no color'}</div>\n      {expand ? (\n        <button onClick={() => setExpand(false)}>show less</button>\n      ) : (\n        <button onClick={() => setExpand(true)}>expand</button>\n      )}\n      {expand && (\n        <div>\n          {edit ? (\n            <>\n              <button tw=\"mr-3\" onClick={() => setEdit(false)}>\n                close editing\n              </button>\n              <EditCategory category={data} />\n            </>\n          ) : (\n            <button tw=\"mr-3\" onClick={() => setEdit(true)}>\n              click to edit\n            </button>\n          )}\n          <button\n            disabled={delete_.status !== 'idle'}\n            css={\n              delete_.status !== 'idle' && tw`text-gray-300 pointer-events-none`\n            }\n            onClick={() => delete_.mutate({ _id: data._id })}\n          >\n            click to delete\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n","import 'twin.macro'\nimport React from 'react'\nimport Form from '../facade/Form'\n\nimport TextField from 'ui/src/components/forms/TextField'\nimport Status from 'ui/src/components/forms/Status'\nimport SubmitButton from 'ui/src/components/forms/SubmitButton'\nimport { create_category } from '@src/api'\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\nimport { apis } from '@src/api/type'\n\nexport default function AddCategory() {\n  const client = useQueryClient()\n  const mutate = useMutation({\n    mutationFn: create_category,\n    onSettled: () => {\n      client.invalidateQueries(['find_category'] satisfies apis)\n    },\n  })\n\n  return (\n    <Form\n      onSuccess={(values, ctx) => {\n        ctx.setValues({} as any, false)\n        ctx.setStatus({ success: 'created' })\n      }}\n      action={mutate}\n      required={['title']}\n    >\n      <div tw=\"grid grid-cols-2 gap-3\">\n        <Status tw=\"col-span-2\" />\n        <TextField name=\"title\" />\n        <TextField name=\"color\" />\n        <TextField name=\"note\" />\n        <TextField name=\"icon\" />\n        <SubmitButton tw=\"col-span-2 mt-2\" size=\"lg\">\n          submit\n        </SubmitButton>\n      </div>\n    </Form>\n  )\n}\n","import React from 'react'\nimport tw from 'twin.macro'\nimport { OneStateProvider } from '@src/utils/OneOpenAtATime'\nimport { setTitle } from './_MetaContext'\nimport CategoryEntry from '@src/components/CategoryEntry'\nimport AddCategory from '@src/components/forms/AddCategory'\nimport { useQuery } from '@src/lib/react-query'\n\nfunction Index_Page_Component() {\n  setTitle('Categories')\n\n  const { data } = useQuery('find_category', [])\n\n  if (!data) return <div>error</div>\n\n  return (\n    <OneStateProvider>\n      <div css={{ '&>*': tw`mt-4` }}>\n        <AddCategory />\n        {data.reverse().map(cat => (\n          <CategoryEntry key={cat._id} category={cat} />\n        ))}\n      </div>\n    </OneStateProvider>\n  )\n}\n\nexport default Index_Page_Component\n"],"names":["EditCategory","category","client","useQueryClient","mutate","useMutation","update_category","__cssprop","Form","values","ctx","Status","HiddenField","TextField","SubmitButton","CategoryEntry","expand","setExpand","useOneState","edit","setEdit","useState","freshData","useQuery","_id","data","delete_","delete_category","React","AddCategory","mutationFn","create_category","onSettled","invalidateQueries","onSuccess","setValues","setStatus","success","action","required","css","name","size","Index_Page_Component","setTitle","OneStateProvider","reverse","map","key","cat"],"mappings":"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"}