{"version":3,"file":"profile.stories-4c064a2c.js","sources":["../../src/components/forms/ResetPassword.tsx","../../src/components/forms/SetPassword.tsx","../../src/components/forms/UpdateProfile.tsx","../../src/routes/Profile.tsx"],"sourcesContent":["import 'twin.macro'\nimport React from 'react'\nimport Form from '../facade/Form'\n\nimport { PasswordField } from 'ui/src/components/forms/TextField'\nimport Status from 'ui/src/components/forms/Status'\nimport SubmitButton from 'ui/src/components/forms/SubmitButton'\nimport { useMutation } from '@tanstack/react-query'\nimport { set_password } from '@src/api'\n\nexport default function ResetPassword() {\n  const mutate = useMutation({ mutationFn: set_password })\n\n  return (\n    <Form\n      onSuccess={(values, ctx) => {\n        ctx.setValues({} as any, false)\n        ctx.setStatus({ success: 'password changed' })\n      }}\n      action={mutate}\n      properties={['newPassword', 'oldPassword']}\n      required={['newPassword', 'oldPassword']}\n    >\n      <div>\n        <Status />\n        <PasswordField name=\"oldPassword\" />\n        <PasswordField name=\"newPassword\" />\n        <SubmitButton tw=\"mt-2\" size=\"lg\">\n          submit\n        </SubmitButton>\n      </div>\n    </Form>\n  )\n}\n","import 'twin.macro'\nimport React from 'react'\nimport Form from '../facade/Form'\n\nimport { PasswordField } from 'ui/src/components/forms/TextField'\nimport Status from 'ui/src/components/forms/Status'\nimport SubmitButton from 'ui/src/components/forms/SubmitButton'\nimport { set_password } from '@src/api'\nimport { useMutation } from '@tanstack/react-query'\n\nexport default function SetPassword() {\n  const mutate = useMutation({ mutationFn: set_password })\n\n  return (\n    <Form\n      onSuccess={(values, ctx) => {\n        ctx.setValues({} as any, false)\n        ctx.setStatus({ success: 'password changed' })\n      }}\n      action={mutate}\n      properties={['newPassword']}\n      required={['newPassword']}\n    >\n      <div>\n        <Status />\n        <PasswordField name=\"oldPassword\" />\n        <SubmitButton tw=\"mt-2\" size=\"lg\">\n          submit\n        </SubmitButton>\n      </div>\n    </Form>\n  )\n}\n","import 'twin.macro'\nimport React from 'react'\nimport Form from '../facade/Form'\n\nimport TextField from 'ui/src/components/forms/TextField'\nimport Status from 'ui/src/components/forms/Status'\nimport { useFormikContext } from 'formik'\nimport { PropsOf } from '@emotion/react'\nimport Button from 'ui/src/components/Button'\nimport { useMutation } from '@tanstack/react-query'\nimport { update_profile } from '@src/api'\n\nexport default function UpdateProfile() {\n  const mutate = useMutation({ mutationFn: update_profile })\n\n  return (\n    <Form\n      onSuccess={(values, ctx) => {\n        ctx.setValues({} as any, false)\n        ctx.setStatus({ success: 'profile updated' })\n      }}\n      action={mutate}\n      properties={['displayName', 'picture']}\n    >\n      <div>\n        <Status />\n        <TextField name=\"displayName\" />\n        <TextField name=\"picture\" />\n        <SubmitButton tw=\"mt-2\" size=\"lg\">\n          submit\n        </SubmitButton>\n      </div>\n    </Form>\n  )\n}\n\nfunction SubmitButton(\n  Props: Omit<PropsOf<typeof Button>, 'disabled' | 'type'>,\n) {\n  const { isSubmitting, submitForm, values, setStatus } =\n    useFormikContext<object>()\n\n  return (\n    <Button {...Props} disabled={isSubmitting} variant=\"light\" asChild>\n      <button\n        onClick={() => {\n          if (Object.values(values).filter(e => e).length === 0) {\n            setStatus({ error: 'empty form' })\n            return\n          }\n          submitForm()\n        }}\n        type=\"button\"\n      >\n        Submit\n      </button>\n    </Button>\n  )\n}\n","import React, { useState } from 'react'\nimport tw from 'twin.macro'\nimport { setTitle } from './_MetaContext'\nimport Button from 'ui/src/components/Button'\nimport ResetPassword from '@src/components/forms/ResetPassword'\nimport SetPassword from '@src/components/forms/SetPassword'\nimport UpdateProfile from '@src/components/forms/UpdateProfile'\nimport { useQuery } from '@src/lib/react-query'\n\nfunction Profile_Page_Component() {\n  setTitle('Profile')\n\n  const { data } = useQuery('profile', [])\n\n  if (!data) return <div>error</div>\n\n  const [open, setOpen] = useState<'password' | 'profile' | ''>('')\n\n  return (\n    <div css={{ '&>*': tw`mt-4` }}>\n      <h1>Profile</h1>\n      <div>Name: {data.displayName}</div>\n      <div>Email: {data.email}</div>\n      <div>Picture: {data.picture || 'no picture'}</div>\n      <div>\n        Providers:\n        {(['google', 'local'] as const)\n          .map(\n            e =>\n              data.providers.includes(e) && (\n                <div key={e}>\n                  {' '}\n                  <span>{e}</span>\n                </div>\n              ),\n          )\n          .filter(e => e)}\n      </div>\n      {data.providers.includes('local') ? (\n        <div>\n          <Button asChild>\n            <button\n              onClick={() => setOpen(o => (o === 'password' ? '' : 'password'))}\n            >\n              Reset Password\n            </button>\n          </Button>\n          {open === 'password' && <ResetPassword />}\n        </div>\n      ) : (\n        <div>\n          <Button asChild>\n            <button\n              onClick={() => setOpen(o => (o === 'password' ? '' : 'password'))}\n            >\n              Set Password\n            </button>\n          </Button>\n          {open === 'password' && <SetPassword />}\n        </div>\n      )}\n      <div>\n        <Button asChild>\n          <button\n            onClick={() => setOpen(o => (o === 'profile' ? '' : 'profile'))}\n          >\n            Update Profile\n          </button>\n        </Button>\n        {open === 'profile' && <UpdateProfile />}\n      </div>\n    </div>\n  )\n}\n\nexport default Profile_Page_Component\n\n// import { Link, useRoutes } from '@src/components/ReactRoute/index'\n// import TextEllipsis from 'ui/src/components/TextEllipsis'\n\n// import {\n//   Box,\n//   Avatar,\n//   Group,\n//   Text,\n//   useMantineTheme,\n//   Button,\n//   Stack,\n//   Divider,\n// } from '@mantine/core'\n// import { store } from '@src/redux/index'\n\n// import { ActionsObjects, RootState, UserState } from '@src/redux/types'\n// import { useSelector } from 'react-redux'\n// import { Outlet } from 'react-router-dom'\n// import dispatch from '@src/redux/dispatch'\n// import { ReactElement } from 'react'\n// import OnlineStateAction from '@src/components/OnlineStateAction'\n\n// function Profile() {\n//   const user = useSelector<RootState, UserState>(s => s.user)\n//   const theme = useMantineTheme()\n\n//   if (!user.profile) {\n//     return <Text>No User Found</Text>\n//   }\n//   return (\n//     <>\n//       <Group sx={{ flexWrap: 'nowrap', alignItems: 'start' }}>\n//         <Avatar size={'xl'} src={user.profile.picture} radius=\"sm\" />\n//         <Box sx={{ overflow: 'hidden', flexGrow: 1, flexShrink: 1 }}>\n//           <Text size=\"xl\" weight={500}>\n//             <TextEllipsis>{user.profile.displayName}</TextEllipsis>\n//           </Text>\n//           <Text color=\"dimmed\" weight={200} size=\"lg\">\n//             <TextEllipsis>{user.profile.email}</TextEllipsis>\n//           </Text>\n//         </Box>\n//       </Group>\n//       <Divider my={24} />\n//       <Outlet />\n//     </>\n//   )\n// }\n\n// export function ProfileIndex() {\n//   const user = useSelector<RootState, UserState>(s => s.user)\n//   const exit = useRoutes()\n\n//   return (\n//     <Stack>\n//       <Link to={'/profile/update'}>\n//         <Button style={{ width: '100%' }} size=\"md\" variant=\"filled\">\n//           Update the Profile\n//         </Button>\n//       </Link>\n//       {!user.profile?.providers.includes('local') && (\n//         <Link to={'/profile/setPassword'}>\n//           <Button style={{ width: '100%' }} size=\"md\" variant=\"filled\">\n//             Set Password\n//           </Button>\n//         </Link>\n//       )}\n//       {user.profile?.providers.includes('local') && (\n//         <Link to={'/profile/changePassword'}>\n//           <Button style={{ width: '100%' }} size=\"md\" variant=\"filled\">\n//             Change Password\n//           </Button>\n//         </Link>\n//       )}\n//       <OnlineStateAction>\n//         {text => {\n//           return (\n//             <Button\n//               style={{ width: '100%' }}\n//               size=\"md\"\n//               variant=\"filled\"\n//               onClick={() => {\n//                 exit()\n//               }}\n//             >\n//               {text}\n//             </Button>\n//           )\n//         }}\n//       </OnlineStateAction>\n\n//       <Button\n//         style={{ width: '100%' }}\n//         size=\"md\"\n//         variant=\"filled\"\n//         color=\"red\"\n//         onClick={() => {\n//           dispatch('user:logout', {})\n//           exit()\n//         }}\n//       >\n//         Log Out\n//       </Button>\n//     </Stack>\n//   )\n// }\n\n// export default Profile\n"],"names":["ResetPassword","mutate","useMutation","mutationFn","set_password","__cssprop","Form","onSuccess","values","ctx","setValues","setStatus","success","action","properties","required","Status","PasswordField","name","SubmitButton","css","size","SetPassword","UpdateProfile","update_profile","TextField","Props","isSubmitting","submitForm","useFormikContext","Button","_extends","disabled","variant","asChild","onClick","Object","filter","e","length","error","type","Profile_Page_Component","setTitle","data","useQuery","open","setOpen","useState","displayName","email","picture","map","providers","includes","key","o"],"mappings":"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"}