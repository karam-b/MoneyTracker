# write a github action's workflow to run e2e test on every push
name: main CI workflows

on: push

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_REPO_CACHE_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_REPO_CACHE_TEAM }}

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: 📥 Install dependencies
        uses: ./.github/actions/pnpm

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 📥 Install e2e dependencies
        shell: sh
        run: pnpm install -g concurrently wait-on turbo@latest

      - name: playwright dependencies
        shell: sh
        run: npx playwright install && npx playwright install-deps

      - name: run rust
        run: ./ci/rust.sh
        shell: bash

      - name: storybook tests
        run: ./ci/test-sb.sh
        shell: bash

      - name: backend integration test
        run: ./ci/test-be.sh
        shell: sh
        
      # - name: chromatic
      #   uses: chromaui/action@v1
      #   with:
      #     projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     workingDir: pkgs/ui

      # - name: e2e test
      # - name: backend test
        # - name: stoty book test
  #     - name: 📤 Upload e2e report
  #       uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: e2e-report
  #         path: _tests__/e2e/playwright-report/
  #         retention-days: 20

      # - name: turbo test
      #   run: turbo test

      # - name: turbo typecheck
      #   run: turbo typecheck

      # - name: turbo build
      #   run: turbo build

      - name: file changes
        run: '[ $(git diff --name-only HEAD^ HEAD | wc -l) -ne 0 ] && echo there are some changes || echo no changes'
        shell: bash
 
      - name: clean up
        run: docker compose down
        shell: sh
  # test:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   env:
  #     TURBO_TOKEN: ${{ secrets.TURBO_REPO_CACHE_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_REPO_CACHE_TEAM }}
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@v2

  #     - name: 📥 Install dependencies
  #       uses: ./.github/actions/pnpm

  #     - name: 🧪 Test
  #       run: turbo test

  # build:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   env:
  #     TURBO_TOKEN: ${{ secrets.TURBO_REPO_CACHE_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_REPO_CACHE_TEAM }}
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@v2

  #     - name: 📥 Install dependencies
  #       uses: ./.github/actions/pnpm

  #     - name: 🏗 Build
  #       run: turbo build

  # typecheck:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   env:
  #     TURBO_TOKEN: ${{ secrets.TURBO_REPO_CACHE_TOKEN }}
  #     TURBO_TEAM: ${{ secrets.TURBO_REPO_CACHE_TEAM }}
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@v2

        #     - name: 📥 Install dependencies
  #       uses: ./.github/actions/pnpm

  #     - name: 🔼⏺️⏹️ Typecheck
  #       run: turbo typecheck

  # e2e:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@v2

  #     - name: 📥 Install dependencies
  #       uses: ./.github/actions/pnpm

  #     - name: 📥 playwright install
  #       run: pnpm --filter e2e pw install --with-deps

  #     - name: 🚀 Run e2e pre scripts
  #       shell: bash
  #       run: turbo e2e:build

  #     - name: 🚀 Run e2e test
  #       shell: bash
  #       run: >
  #         concurrently -n "bg,e2e"
  #         -c "green,bgBlue.bold"
  #         -s first --kill-others
  #         "turbo e2e:bg"
  #         "sleep 6 && pnpm e2e:dep && pnpm --F e2e run pw test"



  # chromatic:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@v2

  #     - name: 📥 Install dependencies
  #       uses: ./.github/actions/pnpm


